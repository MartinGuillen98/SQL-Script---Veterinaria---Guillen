En este apartado se adjunta el código SQL utilizado para crear los Stored Procedures en la base de datos:
-- -----------------------------------------------------------------------------------------------------
ACTUALIZAR COSTO UNITARIO ITEM:
-- -----------------------------------------------------------------------------------------------------
USE veterinaria_2;

DROP PROCEDURE IF EXISTS actualizar_costo_unitario_item;

DELIMITER //
CREATE PROCEDURE actualizar_costo_unitario_item(IN cu_id_item INT, IN cu_costounitario_nuevo DECIMAL(10,2))
BEGIN
    UPDATE proveedores_items
    SET costo_unitario = cu_costounitario_nuevo
    WHERE id_item = cu_id_item;
END //
DELIMITER ;

-- -------------------------------------------------------------------------------------------------------
INSERTAR CLIENTE:
-- -------------------------------------------------------------------------------------------------------
USE veterinaria_2;

DROP PROCEDURE IF EXISTS insertar_cliente;

DELIMITER //
CREATE PROCEDURE insertar_cliente(
    IN p_nombre_cliente VARCHAR(45), 
    IN p_direccion_cliente VARCHAR(45), 
    IN p_telefono_cliente VARCHAR(15)
)
BEGIN
    INSERT INTO clientes (nombre_cliente, direccion, telefono)
    VALUES (p_nombre_cliente, p_direccion_cliente, p_telefono_cliente);
END //
DELIMITER ;

-- -------------------------------------------------------------------------------------------------------
ACTUALIZAR CLIENTE:
-- -------------------------------------------------------------------------------------------------------
USE veterinaria_2;

DROP PROCEDURE IF EXISTS actualizar_cliente;

DELIMITER //
CREATE PROCEDURE actualizar_cliente(
    IN p_id_cliente INT, 
    IN p_nombre_cliente VARCHAR(45), 
    IN p_direccion_cliente VARCHAR(45), 
    IN p_telefono_cliente VARCHAR(15)
)
BEGIN
    UPDATE clientes
    SET nombre_cliente = p_nombre_cliente, 
        direccion = p_direccion_cliente, 
        telefono = p_telefono_cliente
    WHERE id_cliente = p_id_cliente;
END //
DELIMITER ;

-- -------------------------------------------------------------------------------------------------------
ELIMINAR MASCOTA:
-- -------------------------------------------------------------------------------------------------------
USE veterinaria_2;

DROP PROCEDURE IF EXISTS eliminar_mascota;

DELIMITER //

CREATE PROCEDURE eliminar_mascota(id INT)
BEGIN
    DELETE FROM mascotas
    WHERE id_mascota = id;
END //

DELIMITER ;

-- Para utilizar el STORED PROCEDURE de eliminar un registro de la tabla se debe utilizar la siguiente consulta:
CALL eliminar_mascota(3);

-- -------------------------------------------------------------------------------------------------------
RANKING VENTAS POR CLIENTE:
-- -------------------------------------------------------------------------------------------------------
USE veterinaria_2;

DROP PROCEDURE IF EXISTS ranking_ventas_por_cliente;

DELIMITER //

CREATE PROCEDURE ranking_ventas_por_cliente (
    IN orden VARCHAR(4) -- Parámetro que indica ASC o DESC
)
BEGIN
    -- Validar que el parámetro 'orden' sea válido
    IF orden NOT IN ('ASC', 'DESC') THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El parámetro orden debe ser ASC o DESC';
    END IF;

    -- Construir y ejecutar la consulta dinámica
    SET @query = CONCAT(
        'SELECT c.id_cliente, c.nombre_cliente, SUM(vi.monto_total) AS total_ventas
         FROM clientes c
         JOIN ventas v ON c.id_cliente = v.id_cliente
         JOIN ventas_items vi ON v.id_venta = vi.id_venta
         GROUP BY c.id_cliente, c.nombre_cliente
         ORDER BY total_ventas ', orden
    );

    PREPARE consulta FROM @query;
    EXECUTE consulta;
    DEALLOCATE PREPARE consulta;
END //

DELIMITER ;

CALL ranking_ventas_por_cliente('ASC');

